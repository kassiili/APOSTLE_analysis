
	
                pt_out = []
                links = [f for (name,f) in partf.items() \
                        if name in link_names]
                for f in links:
                    if 'PartType{}/{}'.format(pt,dataset) in f.keys():
                        print('here',pt)
                        tmp = f['PartType{}/{}'.format(pt,dataset)][...]
                        pt_out.append(tmp)

                # Sort by link number and add to main list:
                out += [pt_out[i] for i in link_sort]


        # Output array.
        out = []

        # Get particle file:
        with h5py.File(self.part_file,'r') as partf:

            # For each particle type, loop over files, s.t. elements in
            # out are primarily ordered by particle type:
            for pt in part_type:
    
                for f in partf.values():
                    if 'PartType{}/{}'.format(pt,dataset) in f.keys():
                        tmp = f['PartType{}/{}'.format(pt,dataset)][...]
                        out.append(tmp)

        # Combine to a single array.
        if len(out[0].shape) > 1:
            out = np.vstack(out)
        else:
            out = np.concatenate(out)
            
        out = self.convert_to_cgs_part(out,dataset)
            
        return out


